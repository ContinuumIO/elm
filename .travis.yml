language: python

dist: trusty

env:
  global:
    - EARTHIO_VERSION=master
    - EARTHIO_INSTALL_METHOD="conda"
    - EARTHIO_TEST_ENV=earth-test-env
    - ELM_EXAMPLE_DATA_PATH=/tmp/elm-data
    - EARTHIO_CHANNEL_STR=" -c ioam -c conda-forge -c scitools/label/dev -c bioconda"

  matrix:
    - PYTHON=3.6 NUMPY=1.12
    - PYTHON=3.5 NUMPY=1.11 TEST_DOCS=1
    - PYTHON=2.7 NUMPY=1.11

matrix:
  # The build result is determined as soon as the required builds pass/fail
  fast_finish: true

before_install:
  - mkdir -p $ELM_EXAMPLE_DATA_PATH
  - rm -rf $ELM_EXAMPLE_DATA_PATH/*

install:
  - MAKE_MINICONDA=1 ./build_elm_env.sh
  - pushd docs
  - ~/miniconda/bin/conda env create -f environment.yml -n ${EARTHIO_TEST_ENV}-docs
  - source ~/miniconda/bin/activate ${EARTHIO_TEST_ENV}-docs
  # - if [ "$TEST_DOCS" ]; then conda install -c conda-forge -c ioam -c scitools --use-local elm earthio && make html && make doctest; fi
  - source deactivate
  - popd

script:
  - rm -rf $ELM_EXAMPLE_DATA_PATH/*

notifications:
  on_success: change
  on_failure: always
  flowdock: $FD_TOKEN

#deploy:
#  - provider: script
#    script:
#      - ~/miniconda/bin/conda install --name root anaconda-client && ~/miniconda/bin/conda build $EARTHIO_CHANNEL_STR --output --python $PYTHON --numpy $NUMPY conda.recipe | xargs ~/miniconda/bin/conda convert -p all -o _pkgs && find _pkgs -type f -name "*.tar.bz2" -exec ~/miniconda/bin/anaconda --token $ANACONDA_UPLOAD_TOKEN upload --user $ANACONDA_UPLOAD_USER --label dev --force {} \+
#    on:
#      tags: false
#      all_branches: true
#    skip_cleanup: true
